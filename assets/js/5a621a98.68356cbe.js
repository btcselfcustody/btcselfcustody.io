"use strict";(self.webpackChunkmy_personal_website=self.webpackChunkmy_personal_website||[]).push([[1336],{7008:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"coreboot/flashing","title":"Flashing","description":"Flashing firmware always carries some risk.","source":"@site/docs/coreboot/flashing.md","sourceDirName":"coreboot","slug":"/coreboot/flashing/","permalink":"/docs/coreboot/flashing/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"coreboot","permalink":"/docs/tags/coreboot"},{"inline":true,"label":"chipsec","permalink":"/docs/tags/chipsec"},{"inline":true,"label":"bios","permalink":"/docs/tags/bios"},{"inline":true,"label":"flashing","permalink":"/docs/tags/flashing"}],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Flashing","slug":"/coreboot/flashing/","tags":["coreboot","chipsec","bios","flashing"]},"sidebar":"tutorialCoreboot","previous":{"title":"Unlocking BIOS","permalink":"/docs/coreboot/unlocking-bios/"}}');var s=n(4848),r=n(8453);const t={sidebar_position:6,title:"Flashing",slug:"/coreboot/flashing/",tags:["coreboot","chipsec","bios","flashing"]},a="Flashing",l={},c=[{value:"Install Flashing Tools",id:"install-flashing-tools",level:3},{value:"Back Up Your Existing BIOS Region",id:"back-up-your-existing-bios-region",level:3},{value:"Flash the Coreboot BIOS",id:"flash-the-coreboot-bios",level:3},{value:"Verify the Flashed Image",id:"verify-the-flashed-image",level:3},{value:"Quick Byte-for-Byte Comparison",id:"quick-byte-for-byte-comparison",level:3},{value:"Compare Build Information Inside CBFS",id:"compare-build-information-inside-cbfs",level:3},{value:"Check CBFS Contents",id:"check-cbfs-contents",level:3},{value:"Conclusion",id:"conclusion",level:3}];function h(e){const o={admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"flashing",children:"Flashing"})}),"\n",(0,s.jsx)(o.admonition,{type:"warning",children:(0,s.jsx)(o.p,{children:"Flashing firmware always carries some risk.\nIf something goes wrong, your device might not boot until you reflash it using an external programmer.\nAlways back up your current BIOS before writing Coreboot."})}),"\n",(0,s.jsx)(o.h3,{id:"install-flashing-tools",children:"Install Flashing Tools"}),"\n",(0,s.jsx)(o.p,{children:"We will use the flashrom utility to read and write the BIOS chip, and cbfstool to inspect Coreboot images."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"sudo apt install flashrom coreboot-utils\n"})}),"\n",(0,s.jsx)(o.h3,{id:"back-up-your-existing-bios-region",children:"Back Up Your Existing BIOS Region"}),"\n",(0,s.jsx)(o.p,{children:"Before doing anything else, make a full backup of your current BIOS.\nThis is your recovery point if you need to restore the original firmware."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"sudo flashrom -p internal -r factory.rom --ifd -i bios\n"})}),"\n",(0,s.jsx)(o.admonition,{type:"warning",children:(0,s.jsx)(o.p,{children:"This does not back up the entire firmware, only the BIOS region. The Intel Management Engine and descriptor regions are excluded, so this is not a full recovery image."})}),"\n",(0,s.jsx)(o.h3,{id:"flash-the-coreboot-bios",children:"Flash the Coreboot BIOS"}),"\n",(0,s.jsx)(o.p,{children:"Once everything looks correct, flash the prepared Coreboot BIOS region:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"sudo flashrom -p internal -w coreboot.rom --ifd -i bios\n"})}),"\n",(0,s.jsx)(o.h3,{id:"verify-the-flashed-image",children:"Verify the Flashed Image"}),"\n",(0,s.jsx)(o.p,{children:"After flashing, always re-read the chip and compare it against the file you wrote.\nThis ensures the flash was successful and the chip contains exactly what you intended."}),"\n",(0,s.jsx)(o.p,{children:"Read back the flashed chip:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"sudo flashrom -p internal -r flashed_bios.rom --ifd -i bios\n"})}),"\n",(0,s.jsx)(o.p,{children:"Your compiled coreboot.rom contains more than just the BIOS region, so we must extract only the BIOS part to match the layout of the original firmware."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"dd if=coreboot.rom of=coreboot_bios.rom bs=1 skip=5242880 count=11534336\n"})}),"\n",(0,s.jsx)(o.p,{children:"Here:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"skip=5242880 skips the first 5 MB (non-BIOS regions such as Intel ME)."}),"\n",(0,s.jsx)(o.li,{children:"count=11534336 copies the remaining 11 MB, which is the BIOS region."}),"\n"]}),"\n",(0,s.jsx)(o.h3,{id:"quick-byte-for-byte-comparison",children:"Quick Byte-for-Byte Comparison"}),"\n",(0,s.jsx)(o.p,{children:"Check that the flashed BIOS region matches the extracted BIOS region:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"cmp -l coreboot_bios.rom flashed_bios.rom | head -n 20\n"})}),"\n",(0,s.jsx)(o.p,{children:"If no differences appear, the BIOS region was flashed correctly."}),"\n",(0,s.jsx)(o.h3,{id:"compare-build-information-inside-cbfs",children:"Compare Build Information Inside CBFS"}),"\n",(0,s.jsxs)(o.p,{children:["Extract the ",(0,s.jsx)(o.code,{children:"build_info"})," file from each image:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"cbfstool coreboot_bios.rom extract -n build_info -f build_info_expected.rom\ncbfstool flashed_bios.rom extract -n build_info -f build_info_actual.rom\n"})}),"\n",(0,s.jsx)(o.p,{children:"Compare them:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"diff -u build_info_expected.rom build_info_actual.rom\n"})}),"\n",(0,s.jsxs)(o.p,{children:["If the output is empty, the ",(0,s.jsx)(o.code,{children:"build_info"})," files match."]}),"\n",(0,s.jsx)(o.h3,{id:"check-cbfs-contents",children:"Check CBFS Contents"}),"\n",(0,s.jsx)(o.p,{children:"Print the CBFS layout of the flashed BIOS:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"cbfstool flashed_bios.rom print\n"})}),"\n",(0,s.jsx)(o.p,{children:"Compare it with the intended Coreboot image:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"cbfstool coreboot_bios.rom print > cbfs_expected.txt\ncbfstool flashed_bios.rom print > cbfs_actual.txt\ndiff -u cbfs_expected.txt cbfs_actual.txt\n"})}),"\n",(0,s.jsx)(o.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(o.p,{children:"If all comparisons match, your new Coreboot firmware has been flashed correctly and is ready to boot."})]})}function d(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>t,x:()=>a});var i=n(6540);const s={},r=i.createContext(s);function t(e){const o=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(r.Provider,{value:o},e.children)}}}]);